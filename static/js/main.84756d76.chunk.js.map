{"version":3,"sources":["assets/svgs/home.svg","assets/svgs/intro.svg","assets/svgs/projects.svg","assets/svgs/contact.svg","assets/svgs/resume.svg","assets/svgs/close.svg","assets/images/profilePic.jpeg","assets/svgs/menuIcon.svg","App.style.js","components/atoms/Button/Button.style.js","components/templates/Home/Home.js","components/templates/Intro/Intro.js","components/templates/Contact/Contact.js","components/templates/Resume/Resume.js","components/templates/Projects/Projects.js","utils/index.js","components/organisms/Header/Header.style.js","components/molecules/NavBar/NavBar.style.js","components/molecules/NavBar/NavBar.js","components/molecules/ProfileSection/ProfileSection.style.js","components/molecules/ProfileSection/ProfileSection.js","components/organisms/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","styled","div","button","Home","Intro","Contact","Resume","Projects","checkViewPort","window","matchMedia","matches","header","nav","NavBar","to","src","homeSvg","alt","introSvg","resumeSvg","projectsSvg","contactSvg","ProfileSection","className","profilePic","Header","isMobileView","closeHeader","onClick","closeSvg","App","props","onResize","setState","state","displayHeader","this","addEventListener","removeEventListener","menuSvg","path","exact","component","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84756d76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home.133ce3f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/intro.71122dca.svg\";","module.exports = __webpack_public_path__ + \"static/media/projects.aa24918d.svg\";","module.exports = __webpack_public_path__ + \"static/media/contact.c1635617.svg\";","module.exports = __webpack_public_path__ + \"static/media/resume.f1b84300.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.c4c396d3.svg\";","module.exports = __webpack_public_path__ + \"static/media/profilePic.149171fe.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/menuIcon.ac2bf2b4.svg\";","import styled from \"styled-components\";\n\nexport default styled.div`\n  min-height: 100vh;\n  background: #453f86;\n  display: flex;\n\n  ol,\n  ul {\n    list-style: none;\n  }\n\n  img {\n    width: 100%;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  .header-menu {\n    align-self: flex-start;\n  }\n\n  .header-menu-icon {\n    width: 30px;\n  }\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport default styled.button`\n  color: red;\n`;\n","import React from \"react\";\n\nconst Home = () => (\n  <div>\n    {\" \"}\n    <h1>Bikram Jethi (FronEnd Developer)</h1>\n    <p>\n      A passionate Front-end Web Developer with a knack for stunning designs, a\n      heart for social causes and a  never-ending zeal to learn and embrace new\n      technologies aims to expand his knowledge working for a  progressive\n      organization and contribute towards its growth.\n    </p>\n  </div>\n);\n\nexport default Home;\n","import React from \"react\";\n\nconst Intro = () => <div>Intro Page</div>;\n\nexport default Intro;\n","import React from \"react\";\n\nconst Contact = () => <div>Contact Page</div>;\n\nexport default Contact;\n","import React from \"react\";\n\nconst Resume = () => <div>Resume Page</div>;\n\nexport default Resume;\n","import React from \"react\";\n\nconst Projects = () => <div>Projects Page</div>;\n\nexport default Projects;\n","export const checkViewPort = () => {\n  return window.matchMedia(\"(max-width:768px)\").matches;\n};\n","import styled from \"styled-components\";\n\nexport default styled.header`\n  position: relative;\n  height: 100vh;\n  max-width: 80%;\n  background: #bcd3c2;\n  padding: 10px 20px;\n\n  .cross-icon {\n    position: absolute;\n    right: 10px;\n    top: 7px;\n    width: 15px;\n    cursor: pointer;\n  }\n`;\n","import styled from \"styled-components\";\nexport default styled.nav`\n  ul {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px 20px;\n  }\n\n  a {\n    padding: 10px 20px;\n    border-radius: 5px;\n    color: #fff;\n  }\n\n  img {\n    width: 30px;\n  }\n`;\n","import React from \"react\";\nimport StyledNavBar from \"./NavBar.style\";\nimport { Link } from \"react-router-dom\";\n\nimport homeSvg from \"../../../assets/svgs/home.svg\";\nimport introSvg from \"../../../assets/svgs/intro.svg\";\nimport projectsSvg from \"../../../assets/svgs/projects.svg\";\nimport contactSvg from \"../../../assets/svgs/contact.svg\";\nimport resumeSvg from \"../../../assets/svgs/resume.svg\";\n\nconst NavBar = () => {\n  return (\n    <StyledNavBar>\n      {\" \"}\n      <ul>\n        <Link to=\"/\">\n          <li>\n            {\" \"}\n            <img src={homeSvg} alt=\"homeSvg\" />\n          </li>\n        </Link>\n        <Link to=\"intro\">\n          <li>\n            <img src={introSvg} alt=\"introSvg\" />\n          </li>\n        </Link>\n        <Link to=\"resume\">\n          <li>\n            <img src={resumeSvg} alt=\"resumeSvg\" />\n          </li>\n        </Link>\n        <Link to=\"projects\">\n          <li>\n            <img src={projectsSvg} alt=\"projectsSvg\" />\n          </li>\n        </Link>\n        <Link to=\"contact\">\n          <li>\n            <img src={contactSvg} alt=\"contactSvg\" />\n          </li>\n        </Link>\n      </ul>\n    </StyledNavBar>\n  );\n};\n\nexport default NavBar;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n  .profile-pic {\n    width: 100px;\n    img {\n      border-radius: 50%;\n    }\n  }\n`;\n","import React from \"react\";\nimport StyledProfileSection from \"./ProfileSection.style\";\nimport profilePic from \"../../../assets/images/profilePic.jpeg\";\n\nconst ProfileSection = () => (\n  <StyledProfileSection>\n    <div className=\"profile-pic\">\n      <img src={profilePic} alt=\"profile-pic\" />\n    </div>\n    <div>Bikram Jethi</div>\n  </StyledProfileSection>\n);\n\nexport default ProfileSection;\n","import React, { useState } from \"react\";\nimport StyledHeader from \"./Header.style\";\nimport NavBar from \"../../molecules/NavBar\";\n\nimport closeSvg from \"../../../assets/svgs/close.svg\";\nimport ProfileSection from \"../../molecules/ProfileSection\";\n\nconst Header = ({ isMobileView, closeHeader }) => {\n  return (\n    <StyledHeader>\n      {isMobileView && (\n        <button className=\"cross-icon\" onClick={closeHeader}>\n          <img src={closeSvg} alt=\"closeSvg\" />\n        </button>\n      )}\n      <ProfileSection />\n      <NavBar />\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport StyledApp from \"./App.style\";\nimport \"./App.css\";\nimport Button from \"./components/atoms/Button\";\n\nimport Home from \"./components/templates/Home\";\nimport Intro from \"./components/templates/Intro\";\nimport Contact from \"./components/templates/Contact\";\nimport Resume from \"./components/templates/Resume\";\nimport Projects from \"./components/templates/Projects\";\nimport { checkViewPort } from \"./utils\";\nimport Header from \"./components/organisms/Header\";\n\nimport menuSvg from \"./assets/svgs/menuIcon.svg\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMobileView: false,\n      displayHeader: false\n    };\n  }\n  componentDidMount() {\n    this.setState({ isMobileView: checkViewPort() });\n    window && window.addEventListener(\"resize\", this.onResize);\n  }\n\n  componentWillUnmount() {\n    window && window.removeEventListener(\"resize\", this.onResize);\n  }\n\n  onResize = () => {\n    //  eslint-disable-next-line\n    const isMobileView = checkViewPort();\n    this.setState({ isMobileView });\n  };\n\n  render() {\n    const { isMobileView, displayHeader } = this.state;\n    return (\n      <StyledApp>\n        <Router>\n          {!displayHeader && isMobileView && (\n            <button onClick={() => this.setState({ displayHeader: true })} className=\"header-menu\">\n              <img className=\"header-menu-icon\" src={menuSvg} alt=\"menuSvg\" />\n            </button>\n          )}\n          {(!isMobileView || displayHeader) && (\n            <Header\n              isMobileView={isMobileView}\n              closeHeader={() => this.setState({ displayHeader: false })}\n            />\n          )}\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/intro\" component={Intro} />\n            <Route path=\"/resume\" component={Resume} />\n            <Route path=\"/projects\" component={Projects} />\n            <Route path=\"/contact\" component={Contact} />\n          </Switch>\n        </Router>\n      </StyledApp>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}